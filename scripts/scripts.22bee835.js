"use strict";angular.module("ngQueensApp",["ngAnimate","ngCookies"]),angular.module("ngQueensApp").controller("MainController",["$scope",function(a){var b=this;b.currentGrid=4,b.moves=0,b.cols=[0,0,0,0],b.gridSizes=[{name:"4x4",value:4},{name:"5x5",value:5},{name:"6x6",value:6},{name:"7x7",value:7},{name:"8x8",value:8}],b.getNumber=function(a){for(var b=[],c=1;a>=c;c++)b.push(c);return b},b.changeGridSize=function(a){var c;for(b.currentGrid=a,b.cols=new Array(b.currentGrid),c=0;c<b.cols.length;c++)b.cols[c]=0;b.newGame(),localStorage.setItem("gridSize",a)},b.newGame=function(){var a,c;for(a=1;a<b.currentGrid+1;a++){for(c=1;c<b.currentGrid+1;c++)angular.element("#"+a+c).empty(),angular.element("#"+a+c).hasClass("red")&&angular.element("#"+a+c).removeClass("red");b.cols[a-1]=0,angular.element("#Q"+a).removeClass("fade")}b.moves=0,localStorage.setItem("moves",b.moves),localStorage.setItem("cols",b.cols)},a.$watch(function(a){return b.currentGrid},function(a,b){}),b.moveQueen=function(a){var c,d,e=a.target.id;if(2==e.length?(c=Number(e.charAt(0)),d=Number(e.charAt(1))):(c=Number(e.charAt(1)),d=Number(e.charAt(2))),0==b.cols[d-1])angular.element("#Q"+d).addClass("fade"),angular.element("#"+e).append('<img src="images/queen.3cf9eb09.png" class="queen-'+b.currentGrid+'" id="Q'+e+'" />'),b.cols[d-1]=c,b.drawRedBlocks(c,d),b.moves++,localStorage.setItem("moves",b.moves),localStorage.setItem("cols",b.cols);else if(b.cols[d-1]==c)angular.element("#"+b.cols[d-1]+d).empty(),angular.element("#Q"+d).removeClass("fade"),b.cols[d-1]=0,b.removeRedBlocks(c,d),b.moves++,localStorage.setItem("moves",b.moves),localStorage.setItem("cols",b.cols);else{angular.element("#"+b.cols[d-1]+d).empty(),angular.element("#"+e).append('<img src="images/queen.3cf9eb09.png" class="queen-'+b.currentGrid+'" id="Q'+e+'" />');var f=b.cols[d-1];b.cols[d-1]=c,b.removeRedBlocks(f,d),b.moves++,localStorage.setItem("moves",b.moves),localStorage.setItem("cols",b.cols)}},b.drawRedBlocks=function(a,c){var d,e,f;for(d=1;d<b.currentGrid+1;d++)for(f=Math.abs(d-c),angular.element("#"+a+d).addClass("red"),angular.element("#"+d+c).addClass("red"),e=1;e<b.currentGrid+1;e++)(e==a-f||e==a+f)&&angular.element("#"+e+d).addClass("red");angular.element("#"+a+c).removeClass("red")},b.removeRedBlocks=function(a,c){var d,e,f;for(d=1;d<b.currentGrid+1;d++)for(f=Math.abs(d-c),0==b.cols[d-1]&&(angular.element("#"+a+d).removeClass("red"),angular.element("#"+d+c).removeClass("red")),e=1;e<b.currentGrid+1;e++)angular.element("#"+e+d).removeClass("red");for(var d=0;d<b.currentGrid;d++)0!=b.cols[d]&&b.drawRedBlocks(b.cols[d],d+1)},b.onload=function(){var a,c,d,e,f,g,h;if(null!=a&&(a=Number(localStorage.getItem("gridSize")),b.currentGrid=a),null!=d&&(d=Number(localStorage.getItem("moves")),b.moves=d),null!=c)for(c=localStorage.getItem("cols").split(",",a),b.cols=new Array(a),e=0;e<b.cols.length;e++)b.cols[e]=Number(c[e]),0!=b.cols[e]&&(f=b.cols[e],g=e+1,h=String(f)+String(g),angular.element("#Q"+g).addClass("fade"),angular.element("#"+h).append('<img src="images/queen.3cf9eb09.png" class="queen-'+b.currentGrid+'" id="Q'+h+'" />'),b.drawRedBlocks(f,g))},setTimeout(b.onload,200),angular.element(".container").ready(b.onload)}]),angular.module("ngQueensApp").directive("board",function(){return{restrict:"E",templateUrl:"views/board.html"}}),angular.module("ngQueensApp").run(["$templateCache",function(a){a.put("views/board.html",'<div ng-repeat="i in ctrl.getNumber(ctrl.currentGrid) track by i" class="board-row"> <div ng-repeat="j in ctrl.getNumber(ctrl.currentGrid) track by j" id="{{i}}{{j}}" class="tile-{{ctrl.currentGrid}}" ng-click="ctrl.moveQueen($event)"> </div> </div> <img ng-repeat="i in ctrl.getNumber(ctrl.currentGrid) track by i" src="images/queen.3cf9eb09.png" id="Q{{i}}" class="queen-{{ctrl.currentGrid}}">'),a.put("views/main.html",'<div id="content" ng-controller="MainController as ctrl"> <div id="heading" class="row"> <h1 class="title">ngQueens</h1> <div class="moves"> <h4>Moves</h4> <h4>{{ctrl.moves}}</h4> </div> </div> <div id="instructions" class="row"> <div class="txt"> Place all the queens on the board so that <br> no two queens threaten each other ! </div> <button class="restart-button" ng-click="ctrl.newGame()">New game</button> <div class="btn-group"> <button type="button" class="dropdown-toggle grid-button" data-toggle="dropdown"> Grid </button> <ul class="dropdown-menu"> <li><a ng-repeat="item in ctrl.gridSizes" ng-click="ctrl.changeGridSize(item.value)">{{ item.name }}</a></li> </ul> </div> </div> <div id="board-container"> <board></board> </div> </div>')}]);